using Mutagen.Bethesda;
using Mutagen.Bethesda.Synthesis;
using Mutagen.Bethesda.Skyrim;

namespace XpEditorForSynthesis
{

    public class Program
    {
        static Lazy<Settings> Settings = null!;

        public static async Task<int> Main(string[] args)
        {
            return await SynthesisPipeline.Instance
                .AddPatch<ISkyrimMod, ISkyrimModGetter>(RunPatch)
                .SetAutogeneratedSettings(
                    nickname: "Settings",
                    path: "settings.json",
                    out Settings)
                .SetTypicalOpen(GameRelease.SkyrimSE, "xp_editor.esp")
                .Run(args);
        }

        public static void RunPatch(IPatcherState<ISkyrimMod, ISkyrimModGetter> state)
        {

            var avs = state.LoadOrder.PriorityOrder.ActorValueInformation().WinningOverrides();
            foreach (var avGetter in avs)
            {
                if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVAlteration"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.AlterationSkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.AlterationSkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.AlterationSkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.AlterationSkillImproveOffset;
                    }
                }
                else if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVConjuration"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.ConjurationSkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.ConjurationSkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.ConjurationSkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.ConjurationSkillImproveOffset;
                    }
                }
                else if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVDestruction"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.DestructionSkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.DestructionSkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.DestructionSkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.DestructionSkillImproveOffset;
                    }
                }
                else if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVMysticism"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.IllusionSkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.IllusionSkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.IllusionSkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.IllusionSkillImproveOffset;
                    }
                }
                else if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVRestoration"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.RestorationSkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.RestorationSkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.RestorationSkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.RestorationSkillImproveOffset;
                    }
                }
                else if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVEnchanting"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.EnchantingSkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.EnchantingSkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.EnchantingSkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.EnchantingSkillImproveOffset;
                    }
                }
                else if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVOneHanded"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.OneHandedSkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.OneHandedSkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.OneHandedSkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.OneHandedSkillImproveOffset;
                    }
                }
                else if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVTwoHanded"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.TwoHandedSkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.TwoHandedSkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.TwoHandedSkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.TwoHandedSkillImproveOffset;
                    }
                }
                else if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVMarksman"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.ArcherySkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.ArcherySkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.ArcherySkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.ArcherySkillImproveOffset;
                    }
                }
                else if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVBlock"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.BlockSkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.BlockSkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.BlockSkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.BlockSkillImproveOffset;
                    }
                }
                else if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVSmithing"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.SmithingSkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.SmithingSkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.SmithingSkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.SmithingSkillImproveOffset;
                    }
                }
                else if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVHeavyArmor"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.HeavyArmorSkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.HeavyArmorSkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.HeavyArmorSkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.HeavyArmorSkillImproveOffset;
                    }
                }
                else if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVLightArmor"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.LightArmorSkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.LightArmorSkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.LightArmorSkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.LightArmorSkillImproveOffset;
                    }
                }
                else if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVPickpocket"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.PickpocketSkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.PickpocketSkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.PickpocketSkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.PickpocketSkillImproveOffset;
                    }
                }
                else if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVLockpicking"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.LockpickingSkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.LockpickingSkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.LockpickingSkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.LockpickingSkillImproveOffset;
                    }
                }
                else if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVSneak"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.SneakSkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.SneakSkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.SneakSkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.SneakSkillImproveOffset;
                    }
                }
                else if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVAlchemy"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.AlchemySkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.AlchemySkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.AlchemySkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.AlchemySkillImproveOffset;
                    }
                }
                else if (avGetter.EditorID != null && avGetter.EditorID.Equals("AVSpeechcraft"))
                {
                    var av = state.PatchMod.ActorValueInformation.GetOrAddAsOverride(avGetter);
                    if (av.Skill != null)
                    {
                        av.Skill.UseMult = Settings.Value.SpeechSkillUseMult;
                        av.Skill.OffsetMult = Settings.Value.SpeechSkillUseOffset;
                        av.Skill.ImproveMult = Settings.Value.SpeechSkillImproveMult;
                        av.Skill.ImproveOffset = Settings.Value.SpeechSkillImproveOffset;
                    }
                }
            }
        }
    }
}
